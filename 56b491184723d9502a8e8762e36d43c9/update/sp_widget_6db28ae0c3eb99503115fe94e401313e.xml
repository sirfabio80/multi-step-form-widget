<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function(spUtil, $scope, $rootScope, $timeout, $location) {
    var c = this;
    c.gFormInstance = {};

    c.$onInit = function() {
        c.gFormInstance = {};
        c.formWidget = {};
        c.current = 0;
        c.formModified = false;
        c.show = true;
    };

    c.isFirst = function() {
        return c.current == 0;
    };

    c.isLast = function() {
        return c.current == (c.data.form_steps.length - 1);
    };

    c.getStepState = function(pos) {
        var stepObj = c.data.form_steps[pos];
        if (pos > c.current)
            return 'future';
        else if (pos == c.current)
            return 'active';
        else if (pos < c.current)
            return 'past';
    };

    c.save = function() {
        c.gFormInstance.save();
        c.data.form_widget = angular.copy({});
    };

    c.previous = function() {
        c.show = false;
        c.current--;
        if (c.formModified) {
            c.save();
        }
        c.loadWidget(c.current);
    };

    c.next = function() {
        c.show = false;
        c.current++;
        if (c.formModified) {
            c.save();
        }
        c.loadWidget(c.current);
    };

    c.submit = function() {

        if (c.formModified) {
            c.save();
        }

        $timeout(function() {
            $location.url(c.options.submit_url);
        }, 500);

    }

    c.loadWidget = function(stepNumber) {
        c.options.form_widget_options.view = c.data.form_steps[stepNumber].form_view;

        spUtil.get('widget-form', c.options.form_widget_options).then(function(response) {
            c.data.form_widget = angular.copy({});
            c.data.form_widget = angular.copy(response);
            c.formModified = false;
            c.show = true;
        });

    };

    $rootScope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
        c.gFormInstance = angular.copy({});
        c.gFormInstance = angular.copy(gFormInstance);
        if (c.options.read_only) {
            var fields = c.gFormInstance.getFieldNames();
            fields.forEach(function(field) {
                c.gFormInstance.setReadOnly(field, true);
            });
        }
    });

    $rootScope.$on('spModel.fields.rendered', function(e, gFormInstance) {
        c.resetHeight();
        $timeout(function() {
            c.getHeight();
        }, 1000);
    });

    $rootScope.$on('field.change', function(evt, fieldData) {
        c.formModified = true;
    });

};]]></client_script>
        <controller_as>c</controller_as>
        <css>.form__container {
  a.btn {
    min-width: 160px;
  }
  .container-caption.form-container-caption {
    display: none;
  }
}

.loader {
  border: 12px solid $gray-lighter;
  border-top: 12px solid $brand-primary;
  border-radius: 50%;
  width: 80px;
  height: 80px;
  animation: spin 2s linear infinite;
  position: absolute;
  top: 35%;
  left: 43%;
  z-index: 1;
}

.form-step-icons__container {
  position: relative;
}

.step-line {
  position: absolute;
  top: 20px;
  bottom: 0px;
  left: calc(50% - 0.5px);
  width: 1px;
  background-color: $gray-lighter;
  z-index: 1;
}

.form-steps__container&gt;li:last-child .step-line {
  display: none;
}

.form-step__container {
  display: flex;
  grid-column-gap: 10px;
}

.step-badge {
  height: 20px;
  width: 20px;
  border-radius: 50%;
  text-align: center;
  font-size: 14px;
  line-height: 15px;
}

.step-badge--active {
  color: $brand-primary;
  border: 2px solid $brand-primary;
  background-color: white;
}

.step-badge--past {
  color: $gray-lighter;
  border: 2px solid $gray-lighter;
  background-color: $gray-lighter;
}

.step-badge--future {
  color: white;
  border: 2px solid $gray-lighter;
  background-color: white;
}


@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.fade {
  transition: all linear 0.3s;
  opacity: 1;
}

.fade.ng-hide {
  opacity: 0;
}

.ng-hide {
  opacity: 0;
  transition: none 0;
}</css>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,short_description,table,color</field_list>
        <has_preview>false</has_preview>
        <id>x-snc-mp-form</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
    var c = controller;

    c.getHeight = function() {
        var formContainerHeight = $('.widget-form__container').height();
        $('.widget-form__container').css('height', formContainerHeight + 'px');
    };
    c.resetHeight = function() {
        $('.widget-form__container').css('height', '');
    };
}]]></link>
        <name>Multi Step Form</name>
        <option_schema>[{"name":"read_only","section":"other","default_value":"false","label":"Read Only","type":"boolean"},{"name":"submit_url","section":"other","default_value":"/sp","label":"Submit URL","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    input = input || {};

    data.sys_id = input.sys_id || $sp.getParameter('sys_id');
    options.table = $sp.getParameter('table') || options.table;
    options.read_only = options.read_only == true || options.read_only == '';
    data.form_steps = x_snc_mp_form.Configuration.getRecords(options.table);
    data.form_widget = {};

    if (!options.table || !data.sys_id || data.form_steps.length == 0)
        return;

    options.form_widget_options = {};
    options.form_widget_options.table = options.table;
    options.form_widget_options.sys_id = data.sys_id;
    options.form_widget_options.view = data.form_steps[0].form_view;

    data.form_widget = $sp.getWidget('widget-form', options.form_widget_options);

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>fabio.petito</sys_created_by>
        <sys_created_on>2022-11-30 14:22:47</sys_created_on>
        <sys_id>6db28ae0c3eb99503115fe94e401313e</sys_id>
        <sys_mod_count>255</sys_mod_count>
        <sys_name>Multi Step Form</sys_name>
        <sys_package display_value="Multi Step Form" source="x_snc_mp_form">56b491184723d9502a8e8762e36d43c9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Multi Step Form">56b491184723d9502a8e8762e36d43c9</sys_scope>
        <sys_update_name>sp_widget_6db28ae0c3eb99503115fe94e401313e</sys_update_name>
        <sys_updated_by>fabio.petito</sys_updated_by>
        <sys_updated_on>2022-12-05 11:58:53</sys_updated_on>
        <template><![CDATA[<sp-panel class="x-snc-mp-form">
  <p ng-if="c.options.short_description">{{::c.options.short_description}}</p>
  <div class="row">
    <div class="col-sm-3">
      <ul class="list-unstyled form-steps__container">
        <li ng-repeat="step in ::c.data.form_steps track by step.sys_id">
          <div class="form-step__container">
            <div class="form-step-icons__container">
              <div class="step-badge step-badge--{{c.getStepState($index)}}">{{($index + 1)}}</div>
              <div class="step-line"></div>
            </div>
            <div class="form-step-text__container">
              <h4 class="m-n">{{::step.label}}</h4>
              <p>{{::step.short_description}}</p>
            </div>
          </div>
        </li>
      </ul>
    </div>
    <div class="col-sm-9 form__container">
      <div class="widget-form__container">
        <form class="widget-form fade" ng-show="c.show">
          <div>
            <sp-model form_model="c.data.form_widget.data.f" mandatory="mandatory"></sp-model>
          </div>
        </form>
        <div class="loader" ng-hide="c.show"></div>
      </div>
      <div class="form__footer text-center">
        <a class="btn btn-default m-l-sm" ng-disabled="c.isFirst()" ng-href role="button"
          ng-click="c.previous()">${Previous}</a>
        <a class="btn btn-primary m-l-sm" ng-hide="c.isLast()" ng-href role="button" ng-click="c.next()">${Next}</a>
        <a class="btn btn-primary m-l-sm" ng-show="c.isLast()" ng-href role="button" ng-click="c.submit()">${Submit}</a>
      </div>
    </div>
  </div>
</sp-panel>]]></template>
    </sp_widget>
</record_update>
